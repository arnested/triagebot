on: push
name: Build and test

permissions:
  contents: read

jobs:
  go-versions:
    name: Lookup go versions
    runs-on: ubuntu-latest
    outputs:
      go-mod-version: ${{ steps.versions.outputs.go-mod-version }}
      matrix: ${{ steps.versions.outputs.matrix }}
    steps:
    - uses: actions/checkout@v5
    - uses: arnested/go-version-action@v1
      id: versions
  go_generate:
    name: Check generated code is up to date
    needs: go-versions
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
      with:
        path: go/src/arnested.dk/go/triagebot
    - name: Setup Go ${{ needs.go-versions.outputs.go-mod-version }}
      uses: WillAbides/setup-go-faster@v1.14.0
      with:
        go-version: ${{ needs.go-versions.outputs.go-mod-version }}
    - run: go version
    - name: go generate
      env:
        GO111MODULE: 'on'
        GOPATH: ${{ github.workspace }}/go
      run: (cd go/src/arnested.dk/go/triagebot && go generate -x)
    - name: Diff after go generate
      run: (cd go/src/arnested.dk/go/triagebot && git diff --exit-code)
  build_and_test:
    name: Build and test
    needs: go-versions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ${{ fromJSON(needs.go-versions.outputs.matrix) }}
    steps:
    - uses: actions/checkout@v5
    - name: Setup Go ${{ matrix.go-version }}.x
      uses: WillAbides/setup-go-faster@v1.14.0
      with:
        go-version: ${{ matrix.go-version }}.x
        ignore-local: true
    - run: go version
    - name: go test
      env:
        GO111MODULE: 'on'
      run: go test -v -race -cover -covermode=atomic -coverprofile=coverage.txt ./...
    - name: Upload coverage report to Codecov
      uses: codecov/codecov-action@v5
      env:
        CODECOV_ENV: ${{ matrix.go-version }}
