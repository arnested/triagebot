on: push
name: Build and test
jobs:
  go-versions:
    name: Lookup go versions
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.versions.outputs.matrix }}
      minimal: ${{ steps.versions.outputs.minimal }}
    steps:
    - uses: actions/checkout@v3
    - uses: arnested/go-version-action@v1
      id: versions
      env:
        GITHUB_TOKEN: ${{ github.token }}
  go_generate:
    name: Check generated code is up to date
    needs: go-versions
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        path: go/src/arnested.dk/go/triagebot
    - name: Setup Go ${{ needs.go-versions.outputs.minimal }}
      uses: WillAbides/setup-go-faster@v1.7.0
      with:
        go-version: ${{ needs.go-versions.outputs.minimal }}
    - name: go generate
      env:
        GO111MODULE: 'on'
        GOPATH: ${{ github.workspace }}/go
      run: (cd go/src/arnested.dk/go/triagebot && go generate -x)
    - name: Diff after go generate
      run: (cd go/src/arnested.dk/go/triagebot && git diff --exit-code)
  build_and_test:
    name: Build and test
    needs: go-versions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ${{ fromJSON(needs.go-versions.outputs.matrix) }}
    steps:
    - uses: actions/checkout@v3
    - name: Setup Go ${{ matrix.go-version }}.x
      uses: WillAbides/setup-go-faster@v1.7.0
      with:
        go-version: ${{ matrix.go-version }}.x
        ignore-local: true
    - name: go test
      env:
        GO111MODULE: 'on'
      run: go test -v -race -cover -covermode=atomic -coverprofile=coverage.txt ./...
    - name: Upload coverage report to Codecov
      uses: codecov/codecov-action@v2
      env:
        CODECOV_ENV: ${{ matrix.go-version }}
  license_check:
    name: License check
    needs: go-versions
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup Go ${{ needs.go-versions.outputs.minimal }}
      uses: WillAbides/setup-go-faster@v1.7.0
      with:
        go-version: ${{ needs.go-versions.outputs.minimal }}
    - name: Install wwhrd
      env:
        GO111MODULE: 'off'
      run: go get -u github.com/frapposelli/wwhrd
    - name: go mod vendor
      env:
        GO111MODULE: 'on'
      run: go mod vendor
    - name: wwhrd check
      run: $(go env GOPATH)/bin/wwhrd check
  deploy:
    name: Deploy
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs:
    - build_and_test
    - go-versions
    steps:
    - uses: actions/checkout@v3
    - run: echo ::set-output name=go-runtime::$(echo -n go${{ needs.go-versions.outputs.minimal }} | tr -d '.')
      id: runtime
    - uses: google-github-actions/deploy-cloud-functions@main
      with:
        name: ${{ secrets.GCF_NAME }}
        region: ${{ secrets.GCF_REGION }}
        project_id: ${{ secrets.GCF_PROJECT }}
        runtime: ${{ steps.runtime.outputs.go-runtime }}
        entry_point: "Handle"
        credentials: ${{ secrets.GCLOUD_AUTH }}
        memory_mb: 128
        env_vars: TRIAGEBOT_JIRA_USER=${{ secrets.TRIAGEBOT_JIRA_USER }},TRIAGEBOT_JIRA_PASS=${{ secrets.TRIAGEBOT_JIRA_PASS }},TRIAGEBOT_JIRA_FILTER=22400,ZULIP_TOKEN=${{ secrets.ZULIP_TOKEN }},ZULIP_BOT_MAIL=${{ secrets.ZULIP_BOT_MAIL }},ZULIP_BOT_APIKEY=${{ secrets.ZULIP_BOT_APIKEY }},TZ=Europe/Copenhagen,TRIAGEBOT_JIRA_FILTER_UNRELEASED=28200
    - name: Post status to Zulip
      if: ${{ always() }}
      uses: containrrr/shoutrrr-action@v1
      with:
        url: "${{ secrets.ZULIP_SHOUTRRR_URL }}?stream=logs&topic=triagebot"
        message: "Deployed `${{ github.repository }}`@`${{ github.sha }}` to Google Cloud Function `${{ secrets.GCF_NAME }}`@`${{ secrets.GCF_PROJECT }}`: **${{ job.status }}**."
